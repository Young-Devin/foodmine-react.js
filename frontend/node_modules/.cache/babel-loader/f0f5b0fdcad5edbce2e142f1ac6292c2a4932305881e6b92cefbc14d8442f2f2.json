{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devin Young\\\\Desktop\\\\foodmine-react.js\\\\frontend\\\\src\\\\hooks\\\\useCart.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { sample_foods } from '../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(null);\nconst CART_KEY = 'cart';\nconst EMPTY_CART = {\n  items: [],\n  totalPrice: 0,\n  totalCount: 0\n};\nexport default function CartProvider({\n  children\n}) {\n  _s();\n  const [cartItems, setCartItems] = useState(sample_foods.slice(1, 4).map(food => ({\n    food,\n    quantity: 1,\n    price: food.price\n  })));\n  const [totalPrice, setTotalPrice] = useState(40);\n  const [totalCount, setTotalCount] = useState(3);\n  useEffect(() => {\n    const totalPrice = sum(cartItems.map(item => item.price));\n    const totalCount = sum(cartItems.map(item => item.quantity));\n    setTotalPrice(totalPrice);\n    setTotalCount(totalCount);\n  }, [cartItems]);\n  const sum = items => {\n    return items.reduce((prevValue, curValue) => prevValue + curValue, 0);\n  };\n  const removeFromCart = foodId => {\n    const filteredCartItems = cartItems.filter(item => item.food.id !== foodId);\n    setCartItems(filteredCartItems);\n  };\n  const changeQuantity = (cartItem, newQuantity) => {\n    const {\n      food\n    } = cartItem;\n    const changedCartItem = {\n      ...cartItem,\n      quantity: newQuantity,\n      price: food.price * newQuantity\n    };\n    setCartItems(cartItems.map(item => item.food.id === food.id ? changedCartItem : item));\n  };\n  const addToCart = food => {\n    const cartItem = cartItems.find(item => item.food.id === food.id);\n    if (cartItem) {\n      changeQuantity(cartItem, cartItem.quantity + 1);\n    } else {\n      setCartItems([...cartItems, {\n        food,\n        quantity: 1,\n        price: food.price\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: {\n        items: cartItems,\n        totalPrice,\n        totalCount\n      },\n      removeFromCart,\n      changeQuantity,\n      addToCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(CartProvider, \"dkrtudhcM5dJ+KrfSI0JGHcrFFI=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  return useContext(CartContext);\n};\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","sample_foods","jsxDEV","_jsxDEV","CartContext","CART_KEY","EMPTY_CART","items","totalPrice","totalCount","CartProvider","children","_s","cartItems","setCartItems","slice","map","food","quantity","price","setTotalPrice","setTotalCount","sum","item","reduce","prevValue","curValue","removeFromCart","foodId","filteredCartItems","filter","id","changeQuantity","cartItem","newQuantity","changedCartItem","addToCart","find","Provider","value","cart","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","$RefreshReg$"],"sources":["C:/Users/Devin Young/Desktop/foodmine-react.js/frontend/src/hooks/useCart.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react'\r\nimport { sample_foods } from '../data';\r\n\r\nconst CartContext = createContext(null);\r\nconst CART_KEY = 'cart';\r\nconst EMPTY_CART = {\r\n    items: [],\r\n    totalPrice: 0,\r\n    totalCount: 0,\r\n}\r\n\r\nexport default function CartProvider({children}) {\r\n\r\n    const [cartItems, setCartItems] = useState(\r\n    sample_foods\r\n        .slice(1, 4)\r\n        .map(food => ({food, quantity: 1, price: food.price}))\r\n    );\r\n    const [totalPrice, setTotalPrice] = useState(40);\r\n    const [totalCount, setTotalCount] = useState(3);\r\n\r\n    useEffect(() => {\r\n        const totalPrice = sum(cartItems.map(item => item.price));\r\n        const totalCount = sum(cartItems.map(item => item.quantity));\r\n        setTotalPrice(totalPrice);\r\n        setTotalCount(totalCount);\r\n\r\n    }, [cartItems])\r\n\r\n    const sum = items => {\r\n        return items.reduce((prevValue, curValue) => prevValue + curValue, 0)\r\n    }\r\n\r\n    const removeFromCart = foodId => {\r\n        const filteredCartItems = cartItems.filter(item => item.food.id !== foodId);\r\n        setCartItems(filteredCartItems);\r\n    };\r\n\r\n    const changeQuantity = (cartItem, newQuantity) => {\r\n        const { food } = cartItem;\r\n\r\n        const changedCartItem = {\r\n            ...cartItem,\r\n            quantity: newQuantity,\r\n            price: food.price * newQuantity\r\n        };\r\n\r\n        setCartItems(\r\n            cartItems.map(item => (item.food.id === food.id ? changedCartItem : item))\r\n        );\r\n    };\r\n\r\n    const addToCart = food => {\r\n        const cartItem = cartItems.find(item => item.food.id === food.id);\r\n        if (cartItem) {\r\n            changeQuantity(cartItem, cartItem.quantity + 1);\r\n        } else {\r\n            setCartItems([...cartItems, { food, quantity: 1, price: food.price}]);\r\n        }\r\n    };\r\n    return (\r\n        <CartContext.Provider value={{cart:{items:cartItems, totalPrice, totalCount }, \r\n        removeFromCart,\r\n        changeQuantity,\r\n        addToCart,\r\n        }}>\r\n            {children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useCart = () => useContext(CartContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}