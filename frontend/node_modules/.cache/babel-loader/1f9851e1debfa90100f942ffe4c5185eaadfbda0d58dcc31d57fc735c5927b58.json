{"ast":null,"code":"import{useState,createContext,useContext}from\"react\";import*as userService from'../services/userService';import{toast}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(userService.getUser());const login=async(email,password)=>{try{const user=await userService.login(email,password);setUser(user);toast.success('Login Successful');}catch(err){toast.error(err.response.data);}};const register=async data=>{try{const user=await userService.register(data);setUser(user);toast.success('Register Successful');}catch(err){toast.error(err.response.data);}};const logout=()=>{userService.logout();setUser(null);toast.success('Logout Successful');};const updateProfile=async user=>{const updateUser=await userService.updateProfile(user);toast.success('Profile Update Was Successful');if(updateUser)setUser(updateUser);};const changePassword=async passwords=>{await userService.changePassword(passwords);logout();toast.success('Password Changed Successfully, Please Login Again!');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout,register,updateProfile,changePassword},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["useState","createContext","useContext","userService","toast","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","getUser","login","email","password","success","err","error","response","data","register","logout","updateProfile","updateUser","changePassword","passwords","Provider","value","useAuth"],"sources":["C:/Users/Devin Young/Desktop/foodmine-react.js/frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useState, createContext, useContext } from \"react\";\r\nimport * as userService from '../services/userService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(userService.getUser());\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            const user = await userService.login(email, password);\r\n            setUser(user);\r\n            toast.success('Login Successful');\r\n        }\r\n        catch (err) {\r\n            toast.error(err.response.data);\r\n        }\r\n    };\r\n\r\n    const register = async data => {\r\n        try {\r\n            const user = await userService.register(data);\r\n            setUser(user);\r\n            toast.success('Register Successful');\r\n        } catch (err) {\r\n            toast.error(err.response.data);\r\n        }\r\n    }\r\n\r\n    const logout = () => {\r\n        userService.logout();\r\n        setUser(null);\r\n        toast.success('Logout Successful');\r\n    };\r\n\r\n    const updateProfile = async user => {\r\n        const updateUser = await userService.updateProfile(user);\r\n        toast.success('Profile Update Was Successful');\r\n        if (updateUser) setUser(updateUser);\r\n    }\r\n\r\n    const changePassword = async passwords => {\r\n        await userService.changePassword(passwords);\r\n        logout();\r\n        toast.success('Password Changed Successfully, Please Login Again!');\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout, register, updateProfile, changePassword }}>\r\n        {children}\r\n        </AuthContext.Provider>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,aAAa,CAAEC,UAAU,KAAQ,OAAO,CAC3D,MAAO,GAAK,CAAAC,WAAW,KAAM,yBAAyB,CACtD,OAASC,KAAK,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvC,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,IAAI,CAAC,CAEvC,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAACG,WAAW,CAACU,OAAO,CAAC,CAAC,CAAC,CAEvD,KAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACrC,GAAI,CACA,KAAM,CAAAL,IAAI,CAAG,KAAM,CAAAR,WAAW,CAACW,KAAK,CAACC,KAAK,CAAEC,QAAQ,CAAC,CACrDJ,OAAO,CAACD,IAAI,CAAC,CACbP,KAAK,CAACa,OAAO,CAAC,kBAAkB,CAAC,CACrC,CACA,MAAOC,GAAG,CAAE,CACRd,KAAK,CAACe,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACC,IAAI,CAAC,CAClC,CACJ,CAAC,CAED,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAD,IAAI,EAAI,CAC3B,GAAI,CACA,KAAM,CAAAV,IAAI,CAAG,KAAM,CAAAR,WAAW,CAACmB,QAAQ,CAACD,IAAI,CAAC,CAC7CT,OAAO,CAACD,IAAI,CAAC,CACbP,KAAK,CAACa,OAAO,CAAC,qBAAqB,CAAC,CACxC,CAAE,MAAOC,GAAG,CAAE,CACVd,KAAK,CAACe,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACC,IAAI,CAAC,CAClC,CACJ,CAAC,CAED,KAAM,CAAAE,MAAM,CAAGA,CAAA,GAAM,CACjBpB,WAAW,CAACoB,MAAM,CAAC,CAAC,CACpBX,OAAO,CAAC,IAAI,CAAC,CACbR,KAAK,CAACa,OAAO,CAAC,mBAAmB,CAAC,CACtC,CAAC,CAED,KAAM,CAAAO,aAAa,CAAG,KAAM,CAAAb,IAAI,EAAI,CAChC,KAAM,CAAAc,UAAU,CAAG,KAAM,CAAAtB,WAAW,CAACqB,aAAa,CAACb,IAAI,CAAC,CACxDP,KAAK,CAACa,OAAO,CAAC,+BAA+B,CAAC,CAC9C,GAAIQ,UAAU,CAAEb,OAAO,CAACa,UAAU,CAAC,CACvC,CAAC,CAED,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAC,SAAS,EAAI,CACtC,KAAM,CAAAxB,WAAW,CAACuB,cAAc,CAACC,SAAS,CAAC,CAC3CJ,MAAM,CAAC,CAAC,CACRnB,KAAK,CAACa,OAAO,CAAC,oDAAoD,CAAC,CACvE,CAAC,CAED,mBACIX,IAAA,CAACC,WAAW,CAACqB,QAAQ,EAACC,KAAK,CAAE,CAAElB,IAAI,CAAEG,KAAK,CAAES,MAAM,CAAED,QAAQ,CAAEE,aAAa,CAAEE,cAAe,CAAE,CAAAhB,QAAA,CAC7FA,QAAQ,CACa,CAAC,CAG/B,CAAC,CAGD,MAAO,MAAM,CAAAoB,OAAO,CAAGA,CAAA,GAAM5B,UAAU,CAACK,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}