{"ast":null,"code":"import React,{useState,useEffect}from'react';import classes from'./map.module.css';import'leaflet/dist/leaflet.css';import{MapContainer,TileLayer,Marker,Popup,useMapEvents}from'react-leaflet';import{toast}from'react-toastify';import*as L from'leaflet';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Map(_ref){let{readonly,location,onChange}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:classes.container,children:/*#__PURE__*/_jsxs(MapContainer,{className:classes.map,center:[0,0],zoom:1,dragging:!readonly,touchZoom:!readonly,doubleClickZoom:!readonly,scrollWheelZoom:!readonly,boxZoom:!readonly,keyboard:!readonly,attributionControl:false,children:[/*#__PURE__*/_jsx(TileLayer,{url:\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"}),/*#__PURE__*/_jsx(FindButtonAndMarker,{readonly:readonly,location:location,onChange:onChange})]})});}function FindButtonAndMarker(_ref2){let{readonly,location,onChange}=_ref2;const[position,setPosition]=useState(location);useEffect(()=>{if(readonly){map.setView(position,13);return;}if(position)onChange(position);},[position]);const map=useMapEvents({click(e){!readonly&&setPosition(e.latlng);},locationfound(e){setPosition(e.latlng);map.flyTo(e.latlng,13);},locationerror(e){toast.error(e.message);}});const markerIcon=new L.Icon({iconUrl:'/marker-icon-2x.png',iconSize:[25,41],iconAnchor:[12.5,41],popupAnchor:[0,-41]});return/*#__PURE__*/_jsxs(_Fragment,{children:[!readonly&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:classes.find_location,onClick:()=>map.locate(),children:\"Find My Location\"}),position&&/*#__PURE__*/_jsx(Marker,{eventHandlers:{dragend:e=>{setPosition(e.target.getLatLng());}},position:position,draggable:!readonly,icon:markerIcon,children:/*#__PURE__*/_jsx(Popup,{children:\"Shipping Location\"})})]});}","map":{"version":3,"names":["React","useState","useEffect","classes","MapContainer","TileLayer","Marker","Popup","useMapEvents","toast","L","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Map","_ref","readonly","location","onChange","className","container","children","map","center","zoom","dragging","touchZoom","doubleClickZoom","scrollWheelZoom","boxZoom","keyboard","attributionControl","url","FindButtonAndMarker","_ref2","position","setPosition","setView","click","e","latlng","locationfound","flyTo","locationerror","error","message","markerIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","type","find_location","onClick","locate","eventHandlers","dragend","target","getLatLng","draggable","icon"],"sources":["C:/Users/Devin Young/Desktop/foodmine-react.js/frontend/src/components/Map/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport classes from './map.module.css';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport {\r\n    MapContainer,\r\n    TileLayer,\r\n    Marker,\r\n    Popup,\r\n    useMapEvents,\r\n} from 'react-leaflet'\r\nimport { toast } from 'react-toastify';\r\nimport * as L from 'leaflet';\r\n\r\nexport default function Map( { readonly, location, onChange }) {\r\n    return (\r\n    <div className={classes.container}>\r\n        <MapContainer\r\n        className={classes.map}\r\n        center={[0, 0]}\r\n        zoom={1}\r\n        dragging={!readonly}\r\n        touchZoom={!readonly}\r\n        doubleClickZoom={!readonly}\r\n        scrollWheelZoom={!readonly}\r\n        boxZoom={!readonly}\r\n        keyboard={!readonly}\r\n        attributionControl={false}\r\n        >\r\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n            <FindButtonAndMarker\r\n                readonly={readonly}\r\n                location={location}\r\n                onChange={onChange}\r\n            />\r\n        </MapContainer>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nfunction FindButtonAndMarker({ readonly, location, onChange }) {\r\n    const [position, setPosition] = useState(location);\r\n\r\n    useEffect(() => {\r\n        if (readonly) {\r\n            map.setView(position, 13);\r\n            return;\r\n        }\r\n        if (position) onChange(position);\r\n    }, [position]);\r\n\r\n    const map = useMapEvents({\r\n        click(e) {\r\n            !readonly && setPosition(e.latlng);\r\n        },\r\n        locationfound(e) {\r\n            setPosition(e.latlng);\r\n            map.flyTo(e.latlng, 13);\r\n        },\r\n        locationerror(e) {\r\n            toast.error(e.message);\r\n        },\r\n    });\r\n\r\n    const markerIcon = new L.Icon({\r\n        iconUrl:'/marker-icon-2x.png',\r\n        iconSize: [25, 41],\r\n        iconAnchor: [12.5, 41],\r\n        popupAnchor: [0, -41],\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {!readonly && (\r\n                <button\r\n                    type='button'\r\n                    className={classes.find_location}\r\n                    onClick={() => map.locate()}\r\n                >\r\n                    Find My Location\r\n                </button>\r\n            )}\r\n\r\n            {position && (\r\n                <Marker\r\n                    eventHandlers={{\r\n                        dragend: e => {\r\n                            setPosition(e.target.getLatLng());\r\n                        },\r\n                    }}\r\n                    position={position}\r\n                    draggable={!readonly}\r\n                    icon={markerIcon}\r\n                >\r\n                    <Popup>Shipping Location</Popup>\r\n                </Marker>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}