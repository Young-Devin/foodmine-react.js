{"ast":null,"code":"import{PayPalButtons,PayPalScriptProvider,usePayPalScriptReducer}from'@paypal/react-paypal-js';import React,{useEffect}from'react';import{useLoading}from'../../hooks/useLoading';import{pay}from'../../services/orderService';import{useCart}from'../../hooks/useCart';import{toast}from'react-toastify';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";export default function PaypalButtons(_ref){let{order}=_ref;return/*#__PURE__*/_jsx(PayPalScriptProvider,{options:{clientId:'Aa_DY9XDQ4r8MQUuM7M0nQOID-ISGodlDNG8qqC4cqMoUz8HQTwCsw1DNiF-vohTLsH34T4ewRKa8e41'},children:/*#__PURE__*/_jsx(Buttons,{order:order})});}function Buttons(_ref2){let{order}=_ref2;const{clearCart}=useCart();const navigate=useNavigate();const[{isPending}]=usePayPalScriptReducer();const{showLoading,hideLoading}=useLoading();useEffect(()=>{isPending?showLoading():hideLoading();});const createOrder=(data,actions)=>{return actions.order.create({purchase_units:[{amount:{currency_code:'USD',value:order.totalPrice}}]});};const onApprove=async(data,actions)=>{try{const payment=await actions.order.capture();const orderId=await pay(payment.id);clearCart();toast.success('Payment Saved Successfulyl','Success');navigate('/track/'+orderId);}catch(error){toast.error('Payment Save Falied','Error');}};const onError=err=>{toast.error('Payment Falied','Error');};return/*#__PURE__*/_jsx(PayPalButtons,{createOrder:createOrder,onApprove:onApprove,onError:onError});}","map":{"version":3,"names":["PayPalButtons","PayPalScriptProvider","usePayPalScriptReducer","React","useEffect","useLoading","pay","useCart","toast","useNavigate","jsx","_jsx","PaypalButtons","_ref","order","options","clientId","children","Buttons","_ref2","clearCart","navigate","isPending","showLoading","hideLoading","createOrder","data","actions","create","purchase_units","amount","currency_code","value","totalPrice","onApprove","payment","capture","orderId","id","success","error","onError","err"],"sources":["C:/Users/Devin Young/Desktop/foodmine-react.js/frontend/src/components/PaypalButtons/PaypalButtons.js"],"sourcesContent":["import { PayPalButtons, PayPalScriptProvider, usePayPalScriptReducer } from '@paypal/react-paypal-js'\r\nimport React, { useEffect } from 'react'\r\nimport { useLoading } from '../../hooks/useLoading';\r\nimport { pay } from '../../services/orderService';\r\nimport { useCart } from '../../hooks/useCart';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function PaypalButtons({ order }) {\r\n  return (\r\n    <PayPalScriptProvider\r\n        options={{\r\n            clientId: 'Aa_DY9XDQ4r8MQUuM7M0nQOID-ISGodlDNG8qqC4cqMoUz8HQTwCsw1DNiF-vohTLsH34T4ewRKa8e41'\r\n        }}>\r\n            <Buttons order={order} />\r\n    </PayPalScriptProvider>\r\n  )\r\n}\r\n\r\nfunction Buttons({order}){\r\n    const { clearCart } = useCart();\r\n    const navigate = useNavigate();\r\n    const [{ isPending }] = usePayPalScriptReducer();\r\n    const { showLoading, hideLoading } = useLoading();\r\n    useEffect(() => {\r\n        isPending? showLoading() : hideLoading();\r\n    })\r\n\r\n    const createOrder = (data, actions) => {\r\n        return actions.order.create({\r\n            purchase_units: [\r\n                {\r\n                    amount: {\r\n                        currency_code: 'USD',\r\n                        value: order.totalPrice,\r\n                    },\r\n                },\r\n            ]\r\n        })\r\n    }\r\n\r\n    const onApprove = async (data, actions) => {\r\n        try {\r\n            const payment = await actions.order.capture();\r\n            const orderId = await pay(payment.id);\r\n            clearCart();\r\n            toast.success('Payment Saved Successfulyl', 'Success');\r\n            navigate('/track/' + orderId);\r\n        } catch (error) {\r\n            toast.error('Payment Save Falied', 'Error');\r\n        }\r\n    }\r\n\r\n    const onError = err => {\r\n        toast.error('Payment Falied', 'Error');\r\n    };\r\n\r\n    return (\r\n        <PayPalButtons\r\n            createOrder={createOrder}\r\n            onApprove={onApprove}\r\n            onError={onError}\r\n        />\r\n    )\r\n}\r\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,oBAAoB,CAAEC,sBAAsB,KAAQ,yBAAyB,CACrG,MAAO,CAAAC,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,UAAU,KAAQ,wBAAwB,CACnD,OAASC,GAAG,KAAQ,6BAA6B,CACjD,OAASC,OAAO,KAAQ,qBAAqB,CAC7C,OAASC,KAAK,KAAQ,gBAAgB,CACtC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/C,cAAe,SAAS,CAAAC,aAAaA,CAAAC,IAAA,CAAY,IAAX,CAAEC,KAAM,CAAC,CAAAD,IAAA,CAC7C,mBACEF,IAAA,CAACV,oBAAoB,EACjBc,OAAO,CAAE,CACLC,QAAQ,CAAE,kFACd,CAAE,CAAAC,QAAA,cACEN,IAAA,CAACO,OAAO,EAACJ,KAAK,CAAEA,KAAM,CAAE,CAAC,CACX,CAAC,CAE3B,CAEA,QAAS,CAAAI,OAAOA,CAAAC,KAAA,CAAS,IAAR,CAACL,KAAK,CAAC,CAAAK,KAAA,CACpB,KAAM,CAAEC,SAAU,CAAC,CAAGb,OAAO,CAAC,CAAC,CAC/B,KAAM,CAAAc,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAC,CAAEa,SAAU,CAAC,CAAC,CAAGpB,sBAAsB,CAAC,CAAC,CAChD,KAAM,CAAEqB,WAAW,CAAEC,WAAY,CAAC,CAAGnB,UAAU,CAAC,CAAC,CACjDD,SAAS,CAAC,IAAM,CACZkB,SAAS,CAAEC,WAAW,CAAC,CAAC,CAAGC,WAAW,CAAC,CAAC,CAC5C,CAAC,CAAC,CAEF,KAAM,CAAAC,WAAW,CAAGA,CAACC,IAAI,CAAEC,OAAO,GAAK,CACnC,MAAO,CAAAA,OAAO,CAACb,KAAK,CAACc,MAAM,CAAC,CACxBC,cAAc,CAAE,CACZ,CACIC,MAAM,CAAE,CACJC,aAAa,CAAE,KAAK,CACpBC,KAAK,CAAElB,KAAK,CAACmB,UACjB,CACJ,CAAC,CAET,CAAC,CAAC,CACN,CAAC,CAED,KAAM,CAAAC,SAAS,CAAG,KAAAA,CAAOR,IAAI,CAAEC,OAAO,GAAK,CACvC,GAAI,CACA,KAAM,CAAAQ,OAAO,CAAG,KAAM,CAAAR,OAAO,CAACb,KAAK,CAACsB,OAAO,CAAC,CAAC,CAC7C,KAAM,CAAAC,OAAO,CAAG,KAAM,CAAA/B,GAAG,CAAC6B,OAAO,CAACG,EAAE,CAAC,CACrClB,SAAS,CAAC,CAAC,CACXZ,KAAK,CAAC+B,OAAO,CAAC,4BAA4B,CAAE,SAAS,CAAC,CACtDlB,QAAQ,CAAC,SAAS,CAAGgB,OAAO,CAAC,CACjC,CAAE,MAAOG,KAAK,CAAE,CACZhC,KAAK,CAACgC,KAAK,CAAC,qBAAqB,CAAE,OAAO,CAAC,CAC/C,CACJ,CAAC,CAED,KAAM,CAAAC,OAAO,CAAGC,GAAG,EAAI,CACnBlC,KAAK,CAACgC,KAAK,CAAC,gBAAgB,CAAE,OAAO,CAAC,CAC1C,CAAC,CAED,mBACI7B,IAAA,CAACX,aAAa,EACVyB,WAAW,CAAEA,WAAY,CACzBS,SAAS,CAAEA,SAAU,CACrBO,OAAO,CAAEA,OAAQ,CACpB,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}